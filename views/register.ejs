<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Simple CRM</title>
  <link rel="icon" href="/assets/img/favicon-sc.svg" type="image/x-icon"/>
    
  <!-- CSS Files -->
  <link rel="stylesheet" href="/assets/css/bootstrap.min.css" />
  <link rel="stylesheet" href="/assets/css/kaiadmin.min.css" />
  <link rel="stylesheet" href="/assets/css/crm.css" />
</head>

<body>
  <!--  Body Wrapper -->
  <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
    data-sidebar-position="fixed" data-header-position="fixed">
    <div class="wrapper row center-div ">
      <div class="col-md-6 ms-auto me-auto page-inner">
        <div class="card">
          <div class="card-header form-header row-space-between">
              <span class="fw-semibold client-title">가입신청</span>
          </div>
          <div class="card-body">
              <div class="card">
                  <div class="card-body">
                    <form>
                      <div class="mb-3">
                        <label for="exampleInputtext1" class="form-label">Name</label>
                        <input type="text" name="name" class="form-control" id="exampleInputtext1" aria-describedby="textHelp">
                      </div>
                      <div class="mb-3">
                        <label for="exampleInputEmail1" class="form-label">Email Address</label>
                        <input type="email" name="username" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
                      </div>
                      <div class="mb-4">
                        <label for="exampleInputPassword1" class="form-label">Password</label>
                        <input type="password" class="form-control" name="password" id="exampleInputPassword1">
                      </div>
                      <div class="mb-4">
                        <label for="repassword" class="form-label">Re Password</label>
                        <input type="password" class="form-control" name="repassword" id="repassword">
                      </div>
                      <div style="text-align: right;">
                        <button class="command-user-signup btn btn-primary">Sign Up</button>
                      </div>
                    </form>
                    <p class="">가입 후 관리자의 승인을 기다리세요</p>
                  </div>
              </div>
              <div class="divider">
                <span>또는</span>
              </div>
          </div>
          
          <div class="card-tail" style="text-align: right; padding: 0 12px 12px;">
            <span class="">이미 계정이 있다면</span>
            <a class="text-primary fw-bold ms-2 command-go-signin" href="#">Sign In</a>
          </div>
        </div>
      </div>  
    </div>  
    <!-- <div
      class="position-relative overflow-hidden radial-gradient min-vh-100 d-flex align-items-center justify-content-center">
      <div class="d-flex align-items-center justify-content-center w-100">
        <div class="row justify-content-center w-100">
          <div class="col-md-8 col-lg-6 col-xxl-3">
            <div class="card mb-0">
              <div class="card-body">
                <a href="#" class="text-nowrap logo-img text-center d-block py-3 w-100">
                  <img src="/img/logos/dark-logo.png" width="180" alt="" />
                </a>
                <p class="text-center">CRM Manager Platform</p>
                <form>
                  <div class="mb-3">
                    <label for="exampleInputtext1" class="form-label">Name</label>
                    <input type="text" name="name" class="form-control" id="exampleInputtext1" aria-describedby="textHelp">
                  </div>
                  <div class="mb-3">
                    <label for="exampleInputEmail1" class="form-label">Email Address</label>
                    <input type="email" name="username" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
                  </div>
                  <div class="mb-4">
                    <label for="exampleInputPassword1" class="form-label">Password</label>
                    <input type="password" class="form-control" name="password" id="exampleInputPassword1">
                  </div>
                  <div class="mb-4">
                    <label for="repassword" class="form-label">Re Password</label>
                    <input type="password" class="form-control" name="repassword" id="repassword">
                  </div>
                  <button class="command-user-signup btn btn-primary w-100 py-8 fs-4 mb-4 rounded-2">Sign Up</button>
                  <div class="d-flex align-items-center justify-content-center">
                    <p class="fs-4 mb-0 fw-bold">가입 후 관리자의 승인을 기다리세요</p>
                    <p class="fs-4 mb-0 fw-bold">이미 계정이 있다면</p>
                    <a class="text-primary fw-bold ms-2 command-go-signin" href="#">Sign In</a>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div> -->
  </div>

  <script src="/util/util.js"></script>
  <script src="/util/initController.js"></script>
  <script src="/component/crm/abs-component.js"></script>
  <script src="/component/crm/info-message.js"></script>
	<script>
    // URL에서 userInfo 파라미터 가져오기
    const urlParams = new URLSearchParams(window.location.search);
    const userInfoParam = urlParams.get('userInfo');
    const clientIdParam = urlParams.get('clientId');

    let userInfo = null;

    if (userInfoParam) {
        try {
            userInfo = JSON.parse(decodeURIComponent(userInfoParam));
            console.log('Google 프로필 정보:', userInfo);
            
            // DOM이 로드되면 폼에 데이터 자동 채우기
            document.addEventListener('DOMContentLoaded', function() {
                if (userInfo) {
                    // 이메일 채우기
                    const emailInput = document.querySelector('input[name="username"]');
                    if (emailInput && userInfo.email) {
                        emailInput.value = userInfo.email;
                        emailInput.readOnly = true; // 구글 이메일은 수정 불가
                    }

                    // 이름 채우기
                    const nameInput = document.querySelector('input[name="name"]');
                    if (nameInput && userInfo.name) {
                        nameInput.value = userInfo.name;
                    }

                    // 구글 로그인 사용자는 비밀번호 필드 숨기기
                    if (userInfo.provider === 'google') {
                        const passwordFields = document.querySelectorAll('input[type="password"]');
                        passwordFields.forEach(field => {
                            field.parentElement.style.display = 'none';
                        });
                    }

                    // 폼 제출 시 구글 로그인 정보 포함
                    
                }
            });
        } catch (error) {
            console.error('userInfo 파싱 에러:', error);
        }
    }
    else if(clientIdParam)
    {
      userInfo = {};
      userInfo.clientId = clientIdParam;
    }
    document.addEventListener('DOMContentLoaded', function () {

        new InitController(clientIdParam)
        document.querySelector('.client-title').innerText = `${userInfo.clientId} CRM 가입신청`;
      
        document.addEventListener('click', handleClick);

        function handleClick(e) {
            e.preventDefault();
            e.composedPath().find((node)=>{
                if(node.nodeName === 'svg' || node.nodeName === 'path') return false;
                if(typeof(node.className) === 'object' || !node.className || !node.className?.match(/command/)) return false;
                if(node.className.match(/command-user-signup/))
                {
                    const form = node.closest('form');
                    const formData = new FormData(form);
                    
                    // 구글 로그인 사용자는 비밀번호 검증 스킵
                    if (userInfo && userInfo.provider === 'google') {
                        if(!checkName(form) || !checkEmail(form)) return;
                        formData.append('snsId', userInfo.snsId);
                        formData.append('provider', userInfo.provider);
                        formData.append('clientId', userInfo.clientId);
                        if (userInfo.profileImage) {
                            formData.append('profile', userInfo.profileImage);
                        }
                    } else {
                        if(!userJoinCondition(form)) return;
                        formData.append('clientId', userInfo.clientId);
                        formData.append('profile', getRandomProfileImage(14))
                        
                    }

                    util.sendFormData("/user/add", "POST", formData).then((response) => {
                        if(response.success) location.href = ("/user/login/"+userInfo.clientId);
                        else alert(response.message);
                    });
                }

                if(node.className.match(/command-go-signin/))
                {
                    location.href = '/user/login/'+userInfo.clientId;
                }
            });
        }
    });

    const userJoinCondition = (form)=>{
      return (checkName(form) && checkEmail(form) && checkPassword(form) && checkRePassword(form));
    }
    const checkName = (form)=>{
      if(form.name.value.length < 1) 
      {
        alert('이름은 2자리 이상입니다.');
        return false;
      }
      return true;
    }
    const checkEmail = (form)=>{
      if(form.username.value.length < 1) {
        alert('이메일은 필수입력사항입니다');
        return false;
      }
      else
      {
        const regEmail = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\.[a-zA-Z]{2,3}$/i
        if(!regEmail.test(form.username.value)) {
            alert('이메일 형식에 따라 정확히 입력해주세요');
            return false;
        }
      }
      return true;
    }
    const checkPassword = (form)=>{
      if(form.password.value.length < 4) {
        alert('비밀번호는 4자 이상이어야 합니다');
        return false;
      }
      return true;
    }
    const checkRePassword = (form)=>{
      if(form.password.value !== form.repassword.value) {
        alert('비밀번호가 일치하지 않습니다');
        return false;
      }
      return true;
    }

    const getRandomProfileImage = (count)=>{
      const arr = [];
      for(let i=0; i < count; i++) arr.push(i);
      const randomItem = arr[Math.floor(Math.random() * arr.length)];
      return "/assets/img/profile/profile_"+randomItem+".jpg";
    }
 </script>
</body>

</html>